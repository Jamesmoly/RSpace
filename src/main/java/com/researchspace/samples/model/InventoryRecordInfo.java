/*
 * 
 * Modified class files generated by swagger code generation from
 * 
 * RSpace Inventory API
 * Welcome to the RSpace Inventory API.  | Api version | Required minimum RSpace version| | --- | --- | | 1.7.0 | 1.70 | | 1.7.1 | 1.71 | 
 *
 * OpenAPI spec version: 1.7.1
 * Contact: support@researchspace.com
 *
 */


package com.researchspace.samples.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.OffsetDateTime;

/**
 * Basic information common for RSpace Inventory Entities
 */
@ApiModel(description = "Basic information common for RSpace Inventory Entities")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-10-23T10:46:11.180Z")
public class InventoryRecordInfo {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("globalId")
  private String globalId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("lastModified")
  private OffsetDateTime lastModified = null;

  @SerializedName("modifiedBy")
  private String modifiedBy = null;

  @SerializedName("deleted")
  private Boolean deleted = null;

  @SerializedName("iconId")
  private BigDecimal iconId = null;

  @SerializedName("quantity")
  private Quantity quantity = null;

  @SerializedName("tags")
  private String tags = null;

  @SerializedName("barcode")
  private String barcode = null;

  public InventoryRecordInfo id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for the item.
   * @return id
  **/
  @ApiModelProperty(value = "Unique identifier for the item.")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public InventoryRecordInfo globalId(String globalId) {
    this.globalId = globalId;
    return this;
  }

   /**
   * A unique identifier amongst all RSpace data types.
   * @return globalId
  **/
  @ApiModelProperty(value = "A unique identifier amongst all RSpace data types.")
  public String getGlobalId() {
    return globalId;
  }

  public void setGlobalId(String globalId) {
    this.globalId = globalId;
  }

  public InventoryRecordInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The Sample&#39;s name.
   * @return name
  **/
  @ApiModelProperty(value = "The Sample's name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InventoryRecordInfo description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The Sample&#39;s description.
   * @return description
  **/
  @ApiModelProperty(value = "The Sample's description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public InventoryRecordInfo created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * The creation time of the item.
   * @return created
  **/
  @ApiModelProperty(value = "The creation time of the item.")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public InventoryRecordInfo createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Username of the item&#39;s creator.
   * @return createdBy
  **/
  @ApiModelProperty(value = "Username of the item's creator.")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public InventoryRecordInfo lastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
    return this;
  }

   /**
   * The last modification time of the item.
   * @return lastModified
  **/
  @ApiModelProperty(value = "The last modification time of the item.")
  public OffsetDateTime getLastModified() {
    return lastModified;
  }

  public void setLastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
  }

  public InventoryRecordInfo modifiedBy(String modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Username of the last person modifiying the item.
   * @return modifiedBy
  **/
  @ApiModelProperty(value = "Username of the last person modifiying the item.")
  public String getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(String modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public InventoryRecordInfo deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Whether item is deleted or not.
   * @return deleted
  **/
  @ApiModelProperty(value = "Whether item is deleted or not.")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public InventoryRecordInfo iconId(BigDecimal iconId) {
    this.iconId = iconId;
    return this;
  }

   /**
   * The item&#39;s icon identifier.
   * @return iconId
  **/
  @ApiModelProperty(value = "The item's icon identifier.")
  public BigDecimal getIconId() {
    return iconId;
  }

  public void setIconId(BigDecimal iconId) {
    this.iconId = iconId;
  }

  public InventoryRecordInfo quantity(Quantity quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public Quantity getQuantity() {
    return quantity;
  }

  public void setQuantity(Quantity quantity) {
    this.quantity = quantity;
  }

  public InventoryRecordInfo tags(String tags) {
    this.tags = tags;
    return this;
  }

   /**
   * The item&#39;s tags.
   * @return tags
  **/
  @ApiModelProperty(value = "The item's tags.")
  public String getTags() {
    return tags;
  }

  public void setTags(String tags) {
    this.tags = tags;
  }

  public InventoryRecordInfo barcode(String barcode) {
    this.barcode = barcode;
    return this;
  }

   /**
   * The item&#39;s barcode.
   * @return barcode
  **/
  @ApiModelProperty(value = "The item's barcode.")
  public String getBarcode() {
    return barcode;
  }

  public void setBarcode(String barcode) {
    this.barcode = barcode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventoryRecordInfo inventoryRecordInfo = (InventoryRecordInfo) o;
    return Objects.equals(this.id, inventoryRecordInfo.id) &&
        Objects.equals(this.globalId, inventoryRecordInfo.globalId) &&
        Objects.equals(this.name, inventoryRecordInfo.name) &&
        Objects.equals(this.description, inventoryRecordInfo.description) &&
        Objects.equals(this.created, inventoryRecordInfo.created) &&
        Objects.equals(this.createdBy, inventoryRecordInfo.createdBy) &&
        Objects.equals(this.lastModified, inventoryRecordInfo.lastModified) &&
        Objects.equals(this.modifiedBy, inventoryRecordInfo.modifiedBy) &&
        Objects.equals(this.deleted, inventoryRecordInfo.deleted) &&
        Objects.equals(this.iconId, inventoryRecordInfo.iconId) &&
        Objects.equals(this.quantity, inventoryRecordInfo.quantity) &&
        Objects.equals(this.tags, inventoryRecordInfo.tags) &&
        Objects.equals(this.barcode, inventoryRecordInfo.barcode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, globalId, name, description, created, createdBy, lastModified, modifiedBy, deleted, iconId, quantity, tags, barcode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventoryRecordInfo {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    globalId: ").append(toIndentedString(globalId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    iconId: ").append(toIndentedString(iconId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

