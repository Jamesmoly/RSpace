/*
 * 
 * Modified class files generated by swagger code generation from
 * 
 * RSpace Inventory API
 * Welcome to the RSpace Inventory API.  | Api version | Required minimum RSpace version| | --- | --- | | 1.7.0 | 1.70 | | 1.7.1 | 1.71 | 
 *
 * OpenAPI spec version: 1.7.1
 * Contact: support@researchspace.com
 *
 */


package com.researchspace.samples.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;

/**
 * Representation of a User.
 */
@ApiModel(description = "Representation of a User.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-10-23T10:46:11.180Z")
public class User {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("homeFolderId")
  private BigDecimal homeFolderId = null;

  public User id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for the User.
   * @return id
  **/
  @ApiModelProperty(value = "Unique identifier for the User.")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public User username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Unique username for the User.
   * @return username
  **/
  @ApiModelProperty(value = "Unique username for the User.")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public User email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email address for User.
   * @return email
  **/
  @ApiModelProperty(value = "Email address for User.")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public User firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * First name of the User.
   * @return firstName
  **/
  @ApiModelProperty(value = "First name of the User.")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public User lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name of the User.
   * @return lastName
  **/
  @ApiModelProperty(value = "Last name of the User.")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public User homeFolderId(BigDecimal homeFolderId) {
    this.homeFolderId = homeFolderId;
    return this;
  }

   /**
   * The id of the home folder. May be empty if account has not yet been initialised. @since 1.5.4
   * @return homeFolderId
  **/
  @ApiModelProperty(value = "The id of the home folder. May be empty if account has not yet been initialised. @since 1.5.4")
  public BigDecimal getHomeFolderId() {
    return homeFolderId;
  }

  public void setHomeFolderId(BigDecimal homeFolderId) {
    this.homeFolderId = homeFolderId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.id, user.id) &&
        Objects.equals(this.username, user.username) &&
        Objects.equals(this.email, user.email) &&
        Objects.equals(this.firstName, user.firstName) &&
        Objects.equals(this.lastName, user.lastName) &&
        Objects.equals(this.homeFolderId, user.homeFolderId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, username, email, firstName, lastName, homeFolderId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    homeFolderId: ").append(toIndentedString(homeFolderId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

